
package GUI;
import BLL.HangHoaBLL;
import BLL.LoaiHangBLL;
import DTO.HangHoaDTO;
import DTO.LoaiHangDTO;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

public class Frm_QLHangHoa extends javax.swing.JFrame {

    public String id;
    public Frm_QLHangHoa() {
        initComponents();
        addControl();
        addComboBoxMaLoai();
        loadAll();
    }
    private void addControl()
    {
        Font ft=new Font("Times New Roman",Font.BOLD,25);
        lbl_HH.setFont(ft);
        pn1.setBackground(Color.WHITE);
        this.setLocationRelativeTo(null);
        this.setTitle("Quản Lý Hàng Hóa");
        btn1.setBackground(Color.PINK);
        btn2.setBackground(Color.PINK);
        btn3.setBackground(Color.PINK);
        btn4.setBackground(Color.PINK);        
        btn7.setBackground(Color.PINK);
        btnExportExcel.setBackground(Color.PINK);
        btnImportExcel.setBackground(Color.PINK);
        lbl_HH.requestFocus();
        tf1.setText("Nhập mã hàng");
        tf2.setText("Nhập tên hàng");
        tf3.setText("Nhập số lượng");
        tf5.setText("Nhập giá");
        tf6.setText("Nhập dữ liệu cần tìm");
        
        tf1.setForeground(Color.DARK_GRAY);
        tf2.setForeground(Color.DARK_GRAY);
        tf3.setForeground(Color.DARK_GRAY);
        tf5.setForeground(Color.DARK_GRAY);
        tf6.setForeground(Color.DARK_GRAY);
        
    }
    
    private void addComboBoxMaLoai(){
        ArrayList<LoaiHangDTO> arr = new ArrayList<LoaiHangDTO>();
	 LoaiHangBLL loaiBLL = new LoaiHangBLL();
	 arr = loaiBLL.getAllL_Hang();	 
	 LoaiHangDTO loaiDTO = new LoaiHangDTO();
	 for (int i = 0; i < arr.size(); i++) {
		 loaiDTO = arr.get(i);
		 cb1.addItem(loaiDTO.getMA_LOAI()+"-"+loaiDTO.getTEN_LOAI());		 
	 }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        pn1 = new javax.swing.JPanel();
        lbl_HH = new javax.swing.JLabel();
        lbl1 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        lbl3 = new javax.swing.JLabel();
        lbl4 = new javax.swing.JLabel();
        lbl5 = new javax.swing.JLabel();
        tf1 = new javax.swing.JTextField();
        tf2 = new javax.swing.JTextField();
        tf3 = new javax.swing.JTextField();
        tf5 = new javax.swing.JTextField();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        tf6 = new javax.swing.JTextField();
        btn7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        cb1 = new javax.swing.JComboBox<>();
        cb2 = new javax.swing.JComboBox<>();
        btnExportExcel = new javax.swing.JButton();
        btnImportExcel = new javax.swing.JButton();

        btn5.setText("RESET");

        btn6.setText("CLOSE");

        pn1.setPreferredSize(new java.awt.Dimension(1045, 500));

        lbl_HH.setText("QUẢN LÝ HÀNG HÓA");
        lbl_HH.setPreferredSize(new java.awt.Dimension(983, 494));

        lbl1.setText("MÃ HÀNG:");

        lbl2.setText("TÊN HÀNG:");

        lbl3.setText("SỐ LƯỢNG:");

        lbl4.setText("LOẠI HÀNG:");

        lbl5.setText("GIÁ:");

        tf1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf1FocusLost(evt);
            }
        });
        tf1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf1MouseClicked(evt);
            }
        });
        tf1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf1KeyPressed(evt);
            }
        });

        tf2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf2FocusLost(evt);
            }
        });
        tf2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf2MouseClicked(evt);
            }
        });
        tf2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf2KeyPressed(evt);
            }
        });

        tf3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf3FocusLost(evt);
            }
        });
        tf3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf3MouseClicked(evt);
            }
        });
        tf3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf3KeyPressed(evt);
            }
        });

        tf5.setVerifyInputWhenFocusTarget(false);
        tf5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf5FocusLost(evt);
            }
        });
        tf5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf5MouseClicked(evt);
            }
        });

        btn1.setText("THÊM");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("SỬA");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText("XÓA");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setText("XEM TẤT CẢ");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        tf6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf6FocusLost(evt);
            }
        });
        tf6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf6MouseClicked(evt);
            }
        });
        tf6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf6KeyPressed(evt);
            }
        });

        btn7.setText("TÌM KIẾM");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "MÃ HÀNG", "TÊN HÀNG", "SỐ LƯỢNG", "MÃ LOẠI", "GIÁ"
            }
        ));
        tbl1.setRowHeight(20);
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);

        cb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Chọn Mã loại]" }));

        cb2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MÃ HÀNG", "TÊN HÀNG" }));

        btnExportExcel.setText("XUẤT FILE EXCEL");
        btnExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportExcelActionPerformed(evt);
            }
        });

        btnImportExcel.setText("NHẬP FILE EXCEL");
        btnImportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn1Layout = new javax.swing.GroupLayout(pn1);
        pn1.setLayout(pn1Layout);
        pn1Layout.setHorizontalGroup(
            pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn1Layout.createSequentialGroup()
                .addGap(0, 143, Short.MAX_VALUE)
                .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pn1Layout.createSequentialGroup()
                        .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pn1Layout.createSequentialGroup()
                                .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cb1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tf5, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(tf3, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)))
                            .addGroup(pn1Layout.createSequentialGroup()
                                .addComponent(lbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tf2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pn1Layout.createSequentialGroup()
                                .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn7)
                            .addComponent(tf6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pn1Layout.createSequentialGroup()
                                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_HH, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnExportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnImportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(150, 150, 150))
        );
        pn1Layout.setVerticalGroup(
            pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(lbl_HH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn1Layout.createSequentialGroup()
                        .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(tf2))
                        .addGap(18, 18, 18)
                        .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(pn1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnExportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnImportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn1, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        loadAll();
    }//GEN-LAST:event_btn4ActionPerformed

    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
        // TODO add your handling code here:
        int selectedIndex=tbl1.getSelectedRow();
                
        if(tbl1.getModel().getValueAt(selectedIndex,0)!=null&&tbl1.getModel().getValueAt(selectedIndex,1)!=null&&tbl1.getModel().getValueAt(selectedIndex,2)!=null&&tbl1.getModel().getValueAt(selectedIndex,3)!=null&&tbl1.getModel().getValueAt(selectedIndex,4)!=null){        
            tf1.setText(tbl1.getModel().getValueAt(selectedIndex,1).toString());
            tf1.setForeground(Color.BLACK);
            id=tbl1.getModel().getValueAt(selectedIndex,1).toString();
            tf2.setText(tbl1.getModel().getValueAt(selectedIndex,2).toString());
            tf2.setForeground(Color.BLACK);
            tf3.setText(tbl1.getModel().getValueAt(selectedIndex,3).toString());
            tf3.setForeground(Color.BLACK);
            LoaiHangDTO loaiDTO=new LoaiHangDTO();
            LoaiHangBLL loaiBLL=new LoaiHangBLL();
            loaiDTO.setMA_LOAI(tbl1.getModel().getValueAt(selectedIndex,4).toString());
            String loai=loaiDTO.getMA_LOAI()+"-"+loaiBLL.getTenLoai(loaiDTO);
            cb1.setSelectedItem(loai);        
            tf5.setText(tbl1.getModel().getValueAt(selectedIndex,5).toString());
            tf5.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tbl1MouseClicked

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        HangHoaDTO hangDTO=new HangHoaDTO();
        if(tf1.getText().equals("Nhập mã hàng")||tf2.getText().equals("Nhập tên hàng")||tf3.getText().equals("Nhập số lượng")||tf5.getText().equals("Nhập giá")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin.","Thông báo",0);
        }
        else{
            hangDTO.setMA_HANG(tf1.getText());
            hangDTO.setTEN_HANG(tf2.getText());            
            String pattern="\\d{1,}";
            if(tf3.getText().matches(pattern )==false) JOptionPane.showMessageDialog(null, "Số lượng phải là số nguyên dương!","Thông báo",0);                
            else{
                int so_luong=Integer.parseInt(tf3.getText());
                hangDTO.setSO_LUONG(so_luong);
                String value1=(String) cb1.getSelectedItem();
                String maLoai="";
                if(cb1.getSelectedIndex()==0) JOptionPane.showMessageDialog(null, "Vui lòng chọn Mã loại hàng","Thông báo",0);
                else{
                    maLoai=value1.substring(0, 2);
                    hangDTO.setMA_LOAI(maLoai);
                                        
                    if(tf5.getText().matches(pattern )==false) JOptionPane.showMessageDialog(null, "Đơn giá phải là số nguyên dương!","Thông báo",0);                
                    else{
                        int gia=Integer.parseInt(tf5.getText());
                        hangDTO.setGIA(gia);
                        HangHoaBLL hangBLL=new HangHoaBLL();
                        if (hangBLL.inserthang(hangDTO)!=0) {
                            loadAll();
                            JOptionPane.showMessageDialog(null, "Thêm sản phẩm thành công!","Thông báo",1);
                            tf1.setText("");
                            tf2.setText("");
                            tf3.setText("");
                            tf5.setText("");
                            cb1.setSelectedIndex(0);
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Thêm sản phẩm thất bại!","Thông báo",0);
                        }
                    }          
                }
            }
        }        
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        HangHoaDTO hangDTO=new HangHoaDTO();
        hangDTO.setMA_HANG(tf1.getText());
        if(tf1.getText().equals("Nhập mã hàng")||tf1.getText()==null) 
            JOptionPane.showMessageDialog(null, "Vui lòng nhập thông tin Mã hàng!","Thông báo",0);
        else{
            HangHoaBLL hangBLL=new HangHoaBLL();
            int choice = JOptionPane.showConfirmDialog(null,"Bạn có chắc chắn muốn xóa dữ liệu?", "Xác nhận",JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.YES_OPTION){
                if (hangBLL.deletethang(hangDTO)!=0) {
                    loadAll();                
                    JOptionPane.showMessageDialog(null, "Xoá thành công!","Thông báo",1);
                    tf1.setText("");
                    tf2.setText("");
                    tf3.setText("");
                    tf5.setText("");
                    cb1.setSelectedIndex(0);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Mã hàng này không tồn tại!","Thông báo",0);
                }
            }
            
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        HangHoaDTO hangDTO=new HangHoaDTO();
        if(tf1.getText().equals("Nhập mã hàng")||tf2.getText().equals("Nhập tên hàng")||tf3.getText().equals("Nhập số lượng")||tf5.getText().equals("Nhập giá")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin.","Thông báo",0);
        }
        else{
            hangDTO.setMA_HANG(tf1.getText());
            hangDTO.setTEN_HANG(tf2.getText());            
            String pattern="\\d{1,}";
            if(tf3.getText().matches(pattern )==false) JOptionPane.showMessageDialog(null, "Số lượng phải là số nguyên dương!","Thông báo",0);                
            else{
                int so_luong=Integer.parseInt(tf3.getText());
                hangDTO.setSO_LUONG(so_luong);
                String value1=(String) cb1.getSelectedItem();
                String maLoai="";
                if(cb1.getSelectedIndex()==0) JOptionPane.showMessageDialog(null, "Vui lòng chọn Mã loại hàng","Thông báo",0);
                else{
                    maLoai=value1.substring(0, 2);
                    hangDTO.setMA_LOAI(maLoai);                                        
                    if(tf5.getText().matches(pattern )==false) JOptionPane.showMessageDialog(null, "Đơn giá phải là số nguyên dương!","Thông báo",0);                
                    else{
                        int gia=Integer.parseInt(tf5.getText());
                        hangDTO.setGIA(Integer.parseInt(tf5.getText()));
                        HangHoaBLL hangBLL=new HangHoaBLL();
                        if (hangBLL.updatehang(hangDTO,id)!=0) {
                            loadAll();
                            JOptionPane.showMessageDialog(null, "Sửa sản phẩm thành công!","Thông báo",1);
                            tf1.setText("");
                            tf2.setText("");
                            tf3.setText("");
                            tf5.setText("");
                            cb1.setSelectedIndex(0);
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Sửa sản phẩm thất bại!","Thông báo",0);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        // TODO add your handling code here:
        HangHoaDTO hangDTO=new HangHoaDTO();
        if(cb2.getSelectedIndex()==0){
            hangDTO.setMA_HANG(tf6.getText());
            if(tf6.getText().equals("Nhập dữ liệu cần tìm")){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập thông tin Mã hàng cần tìm!","Thông báo",0);
            }
            else
                getHangMa(hangDTO);
        }
        else{
            hangDTO.setTEN_HANG(tf6.getText());
            if(tf6.getText().equals("Nhập dữ liệu cần tìm")){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập thông tin Tên hàng cần tìm!","Thông báo",0);
            }
            else
                getHangTen(hangDTO);
        }
        
    }//GEN-LAST:event_btn7ActionPerformed

    private void btnExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportExcelActionPerformed
        // TODO add your handling code here:
        HangHoaBLL hangBLL=new HangHoaBLL();
        hangBLL.ExportExcel();
        JOptionPane.showMessageDialog(null,"Xuất file Excel thành công","Thông báo", 1);
    }//GEN-LAST:event_btnExportExcelActionPerformed

    private void btnImportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportExcelActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel", "xlsx");
        fc.setFileFilter(filter);
        int result = fc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile(); //Lấy URL
            HangHoaBLL hangBLL=new HangHoaBLL();
            hangBLL.ImportExcel(file);
            loadAll();
            JOptionPane.showMessageDialog(null, "Nhập file excel thành công!");
       }
    }//GEN-LAST:event_btnImportExcelActionPerformed

    private void tf6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf6KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){            
            btn7.doClick();
        }
    }//GEN-LAST:event_tf6KeyPressed

    private void tf1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){            
            tf2.requestFocus();
        }
    }//GEN-LAST:event_tf1KeyPressed

    private void tf2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){            
            tf3.requestFocus();
        }
    }//GEN-LAST:event_tf2KeyPressed

    private void tf3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){            
            tf5.requestFocus();
        }
    }//GEN-LAST:event_tf3KeyPressed

    private void tf1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf1MouseClicked
        // TODO add your handling code here:
        if(tf1.getText().equals("Nhập mã hàng")){
            tf1.setText("");
            tf1.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tf1MouseClicked

    private void tf2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf2MouseClicked
        // TODO add your handling code here:
        if(tf2.getText().equals("Nhập tên hàng")){
            tf2.setText("");
            tf2.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tf2MouseClicked

    private void tf3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf3MouseClicked
        // TODO add your handling code here:
        if(tf3.getText().equals("Nhập số lượng")){
            tf3.setText("");
            tf3.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tf3MouseClicked

    private void tf5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf5MouseClicked
        // TODO add your handling code here:
        if(tf5.getText().equals("Nhập giá")){
            tf5.setText("");
            tf5.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tf5MouseClicked

    private void tf1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf1FocusLost
        // TODO add your handling code here:
        if(tf1.getText().equals("")){
            tf1.setText("Nhập mã hàng");
            tf1.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_tf1FocusLost

    private void tf2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf2FocusLost
        // TODO add your handling code here:
        if(tf2.getText().equals("")){
            tf2.setText("Nhập tên hàng");
            tf2.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_tf2FocusLost

    private void tf3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf3FocusLost
        // TODO add your handling code here:
        if(tf3.getText().equals("")){
            tf3.setText("Nhập số lượng");
            tf3.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_tf3FocusLost

    private void tf5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf5FocusLost
        // TODO add your handling code here:
        if(tf5.getText().equals("")){
            tf5.setText("Nhập giá");
            tf5.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_tf5FocusLost

    private void tf2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf2FocusGained
        // TODO add your handling code here:
        if(tf2.getText().equals("Nhập tên hàng")){
            tf2.setText("");
            tf2.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tf2FocusGained

    private void tf3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf3FocusGained
        // TODO add your handling code here:
        if(tf3.getText().equals("Nhập số lượng")){
            tf3.setText("");
            tf3.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tf3FocusGained

    private void tf5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf5FocusGained
        // TODO add your handling code here:
        if(tf5.getText().equals("Nhập giá")){
            tf5.setText("");
            tf5.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tf5FocusGained

    private void tf6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf6MouseClicked
        // TODO add your handling code here:
        if(tf6.getText().equals("Nhập dữ liệu cần tìm")){
            tf6.setText("");
            tf6.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tf6MouseClicked

    private void tf6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf6FocusLost
        // TODO add your handling code here:
        if(tf6.getText().equals("")){
            tf6.setText("Nhập dữ liệu cần tìm");
            tf6.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_tf6FocusLost

    /**
     * @param args the command line arguments
     */
    public void loadAll() {
	String[] header = { "STT","Mã hàng","Tên hàng","Số lượng","Mã loại","Giá"};
	DefaultTableModel dtm = new DefaultTableModel(header, 0);	 
	ArrayList<HangHoaDTO> arr = new ArrayList<HangHoaDTO>();
	 HangHoaBLL hangBLL = new HangHoaBLL();
	 arr = hangBLL.getAllHang();
	 HangHoaDTO hangDTO = new HangHoaDTO();
	 for (int i = 0; i < arr.size(); i++) {
		 hangDTO = arr.get(i);		 
		 String id = hangDTO.getMA_HANG();
		 String name = hangDTO.getTEN_HANG();	
                 int num=hangDTO.getSO_LUONG();
                 String type=hangDTO.getMA_LOAI();
                 int price=hangDTO.getGIA();
		  Object[] row = { i+1,id, name,num,type,price};
		 dtm.addRow(row);
	 }
	 tbl1.setModel(dtm);
    }
    
    public void getHangMa(HangHoaDTO hangDTO) {
	String[] header = { "STT","Mã hàng","Tên hàng","Số lượng","Mã loại","Giá"};
	DefaultTableModel dtm = new DefaultTableModel(header, 0);	 
	ArrayList<HangHoaDTO> arr = new ArrayList<HangHoaDTO>();
	 HangHoaBLL hangBLL = new HangHoaBLL();
	 arr = hangBLL.searchHangMa(hangDTO);	 
	 for (int i = 0; i < arr.size(); i++) {
		 hangDTO = arr.get(i);		 
		 String id = hangDTO.getMA_HANG();
		 String name = hangDTO.getTEN_HANG();	
                 int num=hangDTO.getSO_LUONG();
                 String type=hangDTO.getMA_LOAI();
                 int price=hangDTO.getGIA();
		  Object[] row = { i+1,id, name,num,type,price};
		 dtm.addRow(row);
	 }
         if(arr.size()==0) JOptionPane.showMessageDialog(null, "Sản phẩm này không tồn tại!","Thông báo",0);
	 tbl1.setModel(dtm);
    }
    public void getHangTen(HangHoaDTO hangDTO) {
	String[] header = { "STT","Mã hàng","Tên hàng","Số lượng","Mã loại","Giá"};
	DefaultTableModel dtm = new DefaultTableModel(header, 0);	 
	ArrayList<HangHoaDTO> arr = new ArrayList<HangHoaDTO>();
	 HangHoaBLL hangBLL = new HangHoaBLL();
	 arr = hangBLL.searchHangTen(hangDTO);	 
	 for (int i = 0; i < arr.size(); i++) {
		 hangDTO = arr.get(i);		 
		 String id = hangDTO.getMA_HANG();
		 String name = hangDTO.getTEN_HANG();	
                 int num=hangDTO.getSO_LUONG();
                 String type=hangDTO.getMA_LOAI();
                 int price=hangDTO.getGIA();
		  Object[] row = { i+1,id, name,num,type,price};
		 dtm.addRow(row);
	 }
         if(arr.size()==0) JOptionPane.showMessageDialog(null, "Sản phẩm này không tồn tại!","Thông báo",0);
	 tbl1.setModel(dtm);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btnExportExcel;
    private javax.swing.JButton btnImportExcel;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JComboBox<String> cb2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lbl5;
    private javax.swing.JLabel lbl_HH;
    private javax.swing.JPanel pn1;
    private javax.swing.JTable tbl1;
    private javax.swing.JTextField tf1;
    private javax.swing.JTextField tf2;
    private javax.swing.JTextField tf3;
    private javax.swing.JTextField tf5;
    private javax.swing.JTextField tf6;
    // End of variables declaration//GEN-END:variables
}
